version: '3'

volumes:
  db: {}
  images: {}

services:
  proxy:
    image: traefik:v2.2
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./compose/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./compose/traefik/config/:/etc/traefik/config/
      - ./compose/traefik/acme.json:/etc/traefik/acme.json
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"

  wiki:
    labels:
      # Router for catching local access
      - "traefik.http.routers.wiki-local.rule=Host(`localhost`, `127.0.0.1`)"
      - "traefik.http.routers.wiki-local.middlewares=replace_w"
      # Router for catching global http access. Redirect to main one
      - "traefik.http.routers.wiki-global.rule=PathPrefix(`/wiki/`, `/w/`) || Path(`/`, `/wiki`)"
      - "traefik.http.routers.wiki-global.middlewares=redirecter"
      - "traefik.http.routers.wiki-global.tls=false"
      - "traefik.http.routers.wiki-global.priority=1" # set to be lowest priority
      # The main router for catching global https access
      - "traefik.http.routers.wiki.rule=PathPrefix(`/wiki/`, `/w/`) || Path(`/`, `/wiki`)"
      - "traefik.http.routers.wiki.tls=true"
      - "traefik.http.routers.wiki.tls.certresolver=letsencrypt"
      - "traefik.http.routers.wiki.middlewares=replace_w"
      # strip /w from uri
      - "traefik.http.middlewares.replace_w.replacepathregex.regex=^/w/(.*)"
      - "traefik.http.middlewares.replace_w.replacepathregex.replacement=/$$1"
      # redirect from http to https for request not from localhost
      - "traefik.http.middlewares.redirecter.redirectscheme.scheme=https"

networks: 
  proxy: {}