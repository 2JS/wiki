version: '3.8'

volumes:
  db: {}
  images: {}

services:
  db:
    image: mariadb
    restart: unless-stopped
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=wiki
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    env_file:
      - .config

  wiki:
    image: lego3410/wiki:latest
    build:
      context: ./compose
      dockerfile: ../Dockerfile
      args:
        MEDIAWIKI_VERSION: 1.34.2
    hostname: ${HOST}
    restart: unless-stopped
    networks:
      - default
      - proxy
    volumes:
      - images:/var/www/html/images
    env_file:
      - .config
      - .env
    labels:
      - "traefik.docker.network=proxy_default"
      # Router for catching local access
      - "traefik.http.routers.wiki-local.rule=Host(`localhost`, `127.0.0.1`)"
      - "traefik.http.routers.wiki-local.middlewares=replace_w"
      # Router for catching global http access. Redirect to main one
      - "traefik.http.routers.wiki-global.rule=Host(`${HOST}`) && PathPrefix(`/wiki/`, `/w/`) || Path(`/`, `/wiki`)"
      - "traefik.http.routers.wiki-global.middlewares=redirecter"
      - "traefik.http.routers.wiki-global.tls=false"
      - "traefik.http.routers.wiki-global.priority=1" # set to be lowest priority
      # The main router for catching global https access
      - "traefik.http.routers.wiki.rule=Host(`${HOST}`) && PathPrefix(`/wiki/`, `/w/`) || Path(`/`, `/wiki`)"
      - "traefik.http.routers.wiki.tls=true"
      - "traefik.http.routers.wiki.tls.certresolver=letsencrypt"
      - "traefik.http.routers.wiki.middlewares=replace_w"
      # strip /w from uri
      - "traefik.http.middlewares.replace_w.replacepathregex.regex=^/w/(.*)"
      - "traefik.http.middlewares.replace_w.replacepathregex.replacement=/$$1"
      # redirect from http to https for request not from localhost
      - "traefik.http.middlewares.redirecter.redirectscheme.scheme=https"

  parsoid:
    image: thenets/parsoid:0.11
    restart: unless-stopped
    environment:
      - PARSOID_DOMAIN_wiki=http://wiki/api.php

  # elasticsearch:
  #   image: elasticsearch:6.5.4
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   environment:
  #     - discovery.type=single-node

networks:
  proxy:
    external:
      name: proxy_default
